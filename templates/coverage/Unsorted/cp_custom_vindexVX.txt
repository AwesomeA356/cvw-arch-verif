
    vtype_sew_8_to_32: coverpoint get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") {
        `ifdef SEW8_SUPPORTED
        bins eight      = {0};
        `endif
        `ifdef SEW16_SUPPORTED
        bins sixteen    = {1};
        `endif
        `ifdef SEW32_SUPPORTED
        bins thirtytwo  = {2};
        `endif
    }

    cp_vs2_element_zero_nonzero : coverpoint ins.current.vs2_val[31:0] {
        `ifdef SEW8_SUPPORTED
        wildcard bins sew8      = {[32'b????????_????????_????????_11111111:32'b????????_????????_????????_00000001]};
        `endif
        `ifdef SEW16_SUPPORTED
        wildcard bins sew16     = {[32'b????????_????????_11111111_11111111:32'b????????_????????_00000000_00000001]};
        `endif
        `ifdef XLEN64
        `ifdef SEW32_SUPPORTED
        wildcard bins sew32     = {[32'b11111111_11111111_11111111_11111111:32'b00000000_00000000_00000000_00000001]};
        `endif
        `endif
    }

    `ifdef XLEN_32

    cp_rs1_target_value : coverpoint ins.current.rs1_val == 8'h80000001 {
        bins target = {1};
    }

    cp_custom_vindexVX_rs1_not_truncated_32 : cross std_vec, cp_rs1_target_value, cp_vs2_element_zero_nonzero, vtype_sew_8_to_32;

    `endif

    //////////////////////////////////////////////////////////////////////////////////

    `ifdef XLEN_64

    cp_rs1_target_value : coverpoint ins.current.rs1_val == 16'h8000000000000001 {
        bins target = {1};
    }

    cp_custom_vindexVX_rs1_not_truncated_64 : cross std_vec, cp_rs1_target_value, cp_vs2_element_zero_nonzero, vtype_sew_8_to_32;

    `endif
