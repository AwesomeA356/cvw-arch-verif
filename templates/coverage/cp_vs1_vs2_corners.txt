    cp_vs1_vs2_zero_zero : coverpoint in_vs1_vs2({(SEW){1'b0}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_one : coverpoint in_vs1_vs2({(SEW){1'b0}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_two : coverpoint in_vs1_vs2({(SEW){1'b0}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_min : coverpoint in_vs1_vs2({(SEW){1'b0}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_minp1 : coverpoint in_vs1_vs2({(SEW){1'b0}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_max : coverpoint in_vs1_vs2({(SEW){1'b0}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_maxm1 : coverpoint in_vs1_vs2({(SEW){1'b0}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_ones : coverpoint in_vs1_vs2({(SEW){1'b0}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_zero_onesm1 : coverpoint in_vs1_vs2({(SEW){1'b0}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_zero : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_one : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_two : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_min : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_minp1 : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_max : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_maxm1 : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_ones : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_one_onesm1 : coverpoint in_vs1_vs2({(SEW-1){1'b0}, {1'b1}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_zero : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_one : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_two : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_min : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_minp1 : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_max : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_maxm1 : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_ones : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_two_onesm1 : coverpoint in_vs1_vs2({(SEW-2){1'b0}, {2'b10}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_zero : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_one : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_two : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_min : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_minp1 : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_max : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_maxm1 : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_ones : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_min_onesm1 : coverpoint in_vs1_vs2({{1'b1}, (SEW-1){1'b0}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_zero : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_one : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_two : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_min : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_minp1 : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_max : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_maxm1 : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_ones : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_minp1_onesm1 : coverpoint in_vs1_vs2({{1'b1}, (SEW-2){1'b0}, {1'b1}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_zero : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_one : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_two : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_min : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_minp1 : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_max : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_maxm1 : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_ones : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_max_onesm1 : coverpoint in_vs1_vs2({{1'b0}, (SEW-1){1'b1}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_zero : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_one : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_two : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_min : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_minp1 : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_max : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_maxm1 : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_ones : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_maxm1_onesm1 : coverpoint in_vs1_vs2({{1'b0}, (SEW-2){1'b1}, {1'b0}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_zero : coverpoint in_vs1_vs2({(SEW){1'b1}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_one : coverpoint in_vs1_vs2({(SEW){1'b1}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_two : coverpoint in_vs1_vs2({(SEW){1'b1}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_min : coverpoint in_vs1_vs2({(SEW){1'b1}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_minp1 : coverpoint in_vs1_vs2({(SEW){1'b1}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_max : coverpoint in_vs1_vs2({(SEW){1'b1}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_maxm1 : coverpoint in_vs1_vs2({(SEW){1'b1}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_ones : coverpoint in_vs1_vs2({(SEW){1'b1}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_ones_onesm1 : coverpoint in_vs1_vs2({(SEW){1'b1}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_zero : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {(SEW){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_one : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {(SEW-1){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_two : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {(SEW-2){1'b0}, {2'b10}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_min : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {{1'b1}, (SEW-1){1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_minp1 : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {{1'b1}, (SEW-2){1'b0}, {1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_max : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {{1'b0}, (SEW-1){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_maxm1 : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {{1'b0}, (SEW-2){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_ones : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {(SEW){1'b1}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

    cp_vs1_vs2_onesm1_onesm1 : coverpoint in_vs1_vs2({(SEW-1){1'b1}, {1'b0}}, {(SEW-1){1'b1}, {1'b0}})  iff (ins.trap == 0 & ins.current.sew == SEW)  {
        bins true = {1};
    }

