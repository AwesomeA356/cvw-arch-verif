

    //////////////////////////////////////////////////////////////////////////////////
    // cr_vl_lmul_e32_emul2max
    //////////////////////////////////////////////////////////////////////////////////

    cp_csr_vtype_lmul_all_le_8_e32_emul2max : coverpoint get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vlmul")  iff (ins.trap == 0 & get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") == 0) {
        // Value of VTYPE.vlmul (vector register grouping)
        //////////////////////// SEW 8  ////////////////////
        `ifdef COVER_VX8
            `ifdef LMULf8_SUPPORTED
                bins eighth  = {5};
            `endif
            `ifdef LMULf4_SUPPORTED
                bins fourth = {6};
            `endif
            `ifdef LMULf2_SUPPORTED
                bins half   = {7};
            `endif
        `endif
        //////////////////////// SEW 16 ////////////////////
        `ifdef COVER_VX16
            `ifdef LMULf4_SUPPORTED
                bins fourth = {6};
            `endif
            `ifdef LMULf2_SUPPORTED
                bins half   = {7};
            `endif
        `endif
        //////////////////////// SEW 32 ////////////////////
        `ifdef COVER_VX32
            `ifdef LMULf2_SUPPORTED
                bins half   = {7};
            `endif
        `endif

        `ifdef COVER_VX32

        `endif
        `ifdef COVER_VX64 // need to only support supported nfields
        bins one    = {0};
        bins two    = {1};
        `endif
    }

    cp_csr_vl_corners : coverpoint vl_check(ins.hart, ins.issue)  iff (ins.trap == 0 )  {
        // Corners values of VL (vector length)
        ignore_bins vl_zero   = {vl_zero};
        ignore_bins vl_illegal = {vl_illegal};
    }

    cr_vl_lmul_e32_emul2max : cross cp_csr_vtype_lmul_all_le_8_e32_emul2max, cp_csr_vl_corners
    iff (ins.trap == 0 & get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") ==
    `ifdef COVER_VX8
    0
    `endif
    `ifdef COVER_VX16
    1
    `endif
    `ifdef COVER_VX32
    2
    `endif
    `ifdef COVER_VX64
    3
    `endif
    )

    //////////////////////////////////////////////////////////////////////////////////
