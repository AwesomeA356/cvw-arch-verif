

    //////////////////////////////////////////////////////////////////////////////////
    // cr_vl_lmul_e32_emul4max
    //////////////////////////////////////////////////////////////////////////////////

    cp_csr_vtype_lmul_all_le_8_e32_emul4max : coverpoint get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vlmul")  iff (ins.trap == 0 & get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") == 0) {
        // Value of VTYPE.vlmul (vector register grouping)
        `ifndef COVER_VX16
            `ifndef COVER_VX32
                `ifndef COVER_VX64
                    `ifdef LMULf8_SUPPORTED
                        bins eighth  = {5};
                    `endif
                `endif
            `endif
        `endif
        `ifndef COVER_VX32
            `ifndef COVER_VX64
                `ifdef LMULf4_SUPPORTED
                    bins fourth = {6};
                `endif
            `endif
        `endif
        `ifndef COVER_VX64
            `ifdef LMULf2_SUPPORTED
                bins half   = {7};
            `endif
        `endif
        bins one    = {0};
        `ifndef COVER_VX8
            bins two    = {1};
            `ifndef COVER_VX16
                bins four   = {2};
            `endif
        `endif
    }

    cp_csr_vl_corners : coverpoint vl_check(ins.hart, ins.issue)  iff (ins.trap == 0 )  {
        // Corners values of VL (vector length)
        ignore_bins vl_zero   = {vl_zero};
        ignore_bins vl_illegal = {vl_illegal};
    }


    `ifdef COVER_VX8
    cr_vl_lmul_e32_emul4max_sew8 : cross cp_csr_vtype_lmul_all_le_8_e32_emul4max, cp_csr_vl_corners  iff (ins.trap == 0 & get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") == 0)  {
        //Cross coverage all legal LMULs (excluding LMUL = 8) for SEW = 8 and vl corners (1, random, vlmax)
    }
    `endif
    `ifdef COVER_VX16
    cr_vl_lmul_e32_emul4max_sew16 : cross cp_csr_vtype_lmul_all_le_8_e32_emul4max, cp_csr_vl_corners  iff (ins.trap == 0 & get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") == 1)  {
        //Cross coverage all legal LMULs (excluding LMUL = 8) for SEW = 8 and vl corners (1, random, vlmax)
    }
    `endif
    `ifdef COVER_VX32
    cr_vl_lmul_e32_emul4max_sew32 : cross cp_csr_vtype_lmul_all_le_8_e32_emul4max, cp_csr_vl_corners  iff (ins.trap == 0 & get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") == 2)  {
        //Cross coverage all legal LMULs (excluding LMUL = 8) for SEW = 8 and vl corners (1, random, vlmax)
    }
    `endif
    `ifdef COVER_VX64
    cr_vl_lmul_e32_emul4max_sew64 : cross cp_csr_vtype_lmul_all_le_8_e32_emul4max, cp_csr_vl_corners  iff (ins.trap == 0 & get_csr_val(ins.hart, ins.issue, `SAMPLE_BEFORE, "vtype", "vsew") == 3)  {
        //Cross coverage all legal LMULs (excluding LMUL = 8) for SEW = 8 and vl corners (1, random, vlmax)
    }
    `endif

    //////////////////////////////////////////////////////////////////////////////////
