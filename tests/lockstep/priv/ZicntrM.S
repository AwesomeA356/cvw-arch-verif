///////////////////////////////////////////
// ZicntrM.S
// asantillana@hmc.edu 02/11/25
// Purpose: Functional coverage tests for Zicntr
///////////////////////////////////////////

/// Write walking 1s and 0s to CLINT MTIME, read back from time and mtime CSRs
#ifdef __riscv_xlen
	#if __riscv_xlen == 64
		// Writing walking zeros and ones to CLINT.MTIME address
		li t0, 0x02000000	# load CLINT base address into t0
		li t1, 1		# 1 into lsb
		li t2, -1		# keep 1 register with all 1s
		li t4, 0xBFF8		# load the offset into t4
		add t4, t4, t0		# calculate the final address (CLINT.MTIME)
	1: sd t1, 0(t4)		# store value into CLINT.MTIME address
		xor t3, t2, t1		# create the walked 0 at same position as 1
		sd t3, 0(t4)		# store walking 0 into CLINT.MTIME
		slli t1, t1, 1		# walk the 1
		bnez t1, 1b		# repeat until all bits are walked
	#elif __riscv_xlen == 32
		// Writing walking zeros and ones to CLINT.MTIME address
		li t0, 0x02000000	# load CLINT base address into t0
		li t1, 1		# 1 into lsb
		li t2, -1		# keep 1 register with all 1s
	1: sw t1, 0(t0)		# Store walking 1 into CLINT.MTIME
		xor t3, t2, t1		# Create the walked 0 at the same position
		sw t3, 0(t0)		# Store walking 0 into CLINT.MTIME
		slli t1, t1, 1		# Walk the 1
		bnez t1, 1b		# Repeat until all bits are walked
	#endif
#endif


#include "ZicntrM-Walk.h"
 
/////////////////////////////////
// Autogenerated code pasted in from csrtests.py to create walking 1s and 0s for the following CSRs: 
// mcycle, minstret, mcountinhibit. mhpmcounter3...31, mhpmevent3...31
// for RV32 only: mcycleh, minstreth, mhpmcounterh 3...31, mhpmeventh3...31
/////////////////////////////////



finished:
    j done

done:
    nop
    